name: Build FreshRSS

on:
  push:
    branches: ["main"]
    paths:
      - "freshrss/Dockerfile"
      - "freshrss/entrypoint.sh"
      - "freshrss/setup.sh"
      - ".github/workflows/docker-image.yml"
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Get old hash
        id: get-old-hash
        run: |
          if [ -f .github/cache/hash.txt ]; then
            OLD_HASH=$(cat .github/cache/hash.txt)
          else
            OLD_HASH=""
          fi
          echo "old-hash=$OLD_HASH" >> $GITHUB_OUTPUT
      
      - name: Download and check file hash
        id: check-hash
        run: |
          # Download and hash the file
          curl -L https://github.com/FreshRSS/FreshRSS/archive/latest.zip -o current.zip
          NEW_HASH=$(sha256sum current.zip | cut -d' ' -f1)
          OLD_HASH="${{ steps.get-old-hash.outputs.old-hash }}"
          echo "new-hash=$NEW_HASH" >> $GITHUB_OUTPUT
          
          if [ "$NEW_HASH" != "$OLD_HASH" ]; then
            echo "zip-updated=true" >> $GITHUB_OUTPUT
            echo "FreshRSS zip has been updated!"
            echo "Old hash: $OLD_HASH"
            echo "New hash: $NEW_HASH"
          else
            echo "zip-updated=false" >> $GITHUB_OUTPUT
            echo "No changes detected in FreshRSS zip"
          fi
      
      - name: Determine if build is needed
        id: should-build
        run: |
          # Build if FreshRSS was updated OR if triggered by push event
          if [ "${{ steps.check-hash.outputs.zip-updated }}" == "true" ] || [ "${{ github.event_name }}" == "push" ]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            echo "Build will proceed"
          else
            echo "should-build=false" >> $GITHUB_OUTPUT
            echo "No build needed"
          fi
      
      - name: Update hash file
        if: steps.check-hash.outputs.zip-updated == 'true'
        run: |
          mkdir -p .github/cache
          echo "${{ steps.check-hash.outputs.new-hash }}" > .github/cache/hash.txt
      
      - name: Commit hash file
        if: steps.check-hash.outputs.zip-updated == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/cache/hash.txt
          git commit -m "Update FreshRSS hash: ${{ steps.check-hash.outputs.new-hash }}" || exit 0
          git push
      
      - name: Login to GitHub Container Registry
        if: steps.should-build.outputs.should-build == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push the Docker image
        if: steps.should-build.outputs.should-build == 'true'
        working-directory: ./freshrss
        run: |
          if [ "${{ steps.check-hash.outputs.zip-updated }}" == "true" ]; then
            echo "Building Docker image because FreshRSS was updated..."
          else
            echo "Building Docker image because of repository changes..."
          fi
          docker build . --file Dockerfile --tag ghcr.io/${{ github.repository }}/789548356823:latest
          docker push ghcr.io/${{ github.repository }}/789548356823:latest
      
      - name: Skip build
        if: steps.should-build.outputs.should-build == 'false'
        run: |
          echo "Skipping Docker build - no changes detected and not triggered by push"